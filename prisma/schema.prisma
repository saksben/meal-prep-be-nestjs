// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  name        String
  mealPlans   MealPlan[]
  groceryList GroceryList[]
  goals       Goal[]
}

model Ingredient {
  id            Int           @id @default(autoincrement())
  name          String
  unit          String
  amount        Float
  calories      Float
  carbohydrates Float
  fat           Float
  protein       Float
  price         Float?
  meals         MealIngredient[]
}

model Meal {
  id            Int           @id @default(autoincrement())
  name          String
  description   String
  recipe        String
  servings      Int
  recipeLink    String?
  filters       Filter[]
  mealPlans     MealPlan[]
  ingredients   MealIngredient[]
}

model MealIngredient {
  meal          Meal      @relation(fields: [mealId], references: [id])
  mealId        Int
  ingredient    Ingredient  @relation(fields: [ingredientId], references: [id])
  ingredientId  Int

  @@id([mealId, ingredientId]) // Compound primary key for many-to-many
}

model Filter {
  id      Int     @id @default(autoincrement())
  name    String
  meals   Meal[]
}

model Goal {
  id            Int         @id @default(autoincrement())
  name          String
  calories      Float
  carbohydrates Float
  fat           Float
  protein       Float
  price         Float?
  mealPlans     MealPlan[]
  user          User        @relation(fields: [userId], references: [id])
  userId        Int
}

model MealPlan {
  id            Int           @id @default(autoincrement())
  name          String
  user          User          @relation(fields: [userId], references: [id])
  userId        Int
  frequency     String
  goal          Goal?         @relation(fields: [goalId], references: [id])
  goalId        Int?
  meals         Meal[]
  groceryLists  GroceryList[] @relation("MealPlanGroceryLists")
}

model GroceryList {
  id        Int         @id @default(autoincrement())
  user      User        @relation(fields: [userId], references: [id])
  userId    Int
  mealPlans MealPlan[]  @relation("MealPlanGroceryLists")
}